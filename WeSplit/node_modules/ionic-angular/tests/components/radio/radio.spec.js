"use strict";
var ionic_1 = require('../../../../ionic');
function run() {
    describe('RadioGroup', function () {
        describe('_update', function () {
            it('should set checked via string values', function () {
                var rb1 = createRadioButton();
                rb1.value = 'string1';
                var rb2 = createRadioButton();
                rb2.value = 'string2';
                var rb3 = createRadioButton();
                rb3.value = 'string3';
                rg.value = 'string1';
                rg._update();
                expect(rb1.checked).toEqual(true);
                expect(rb2.checked).toEqual(false);
                expect(rb3.checked).toEqual(false);
            });
            it('should set checked via string group value, and number button values', function () {
                var rb1 = createRadioButton();
                rb1.value = 1;
                var rb2 = createRadioButton();
                rb2.value = 2;
                var rb3 = createRadioButton();
                rb3.value = 3;
                rg.value = '1';
                rg._update();
                expect(rb1.checked).toEqual(true);
                expect(rb2.checked).toEqual(false);
                expect(rb3.checked).toEqual(false);
            });
            it('should set checked via number group value, and string button values', function () {
                var rb1 = createRadioButton();
                rb1.value = '1';
                var rb2 = createRadioButton();
                rb2.value = '2';
                var rb3 = createRadioButton();
                rb3.value = '3';
                rg.value = 1;
                rg._update();
                expect(rb1.checked).toEqual(true);
                expect(rb2.checked).toEqual(false);
                expect(rb3.checked).toEqual(false);
            });
            it('should set checked via empty string group value, and one empty string button value', function () {
                var rb1 = createRadioButton();
                rb1.value = '';
                var rb2 = createRadioButton();
                rb2.value = 'value2';
                var rb3 = createRadioButton();
                rb3.value = 'value3';
                rg.value = '';
                rg._update();
                expect(rb1.checked).toEqual(true);
                expect(rb2.checked).toEqual(false);
                expect(rb3.checked).toEqual(false);
            });
            it('should only check at most one value', function () {
                var rb1 = createRadioButton();
                rb1.value = 'string1';
                var rb2 = createRadioButton();
                rb2.value = 'string1';
                var rb3 = createRadioButton();
                rb3.value = 'string1';
                rg.value = 'string1';
                rg._update();
                expect(rb1.checked).toEqual(true);
                expect(rb2.checked).toEqual(false);
                expect(rb3.checked).toEqual(false);
            });
        });
        var rg;
        var form;
        function createRadioButton() {
            return new ionic_1.RadioButton(form, null, rg);
        }
        function mockRenderer() {
            return {
                setElementAttribute: function () { }
            };
        }
        function mockElementRef() {
            return {
                nativeElement: document.createElement('div')
            };
        }
        beforeEach(function () {
            rg = new ionic_1.RadioGroup(mockRenderer(), mockElementRef());
            form = new ionic_1.Form();
        });
    });
}
exports.run = run;